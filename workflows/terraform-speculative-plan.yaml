kind: WorkflowTemplate
metadata:
  name: terraform-speculative-plan
  namespace: argo
  labels:
    workflows.argoproj.io/creator: system-serviceaccount-argo-argo-server
  annotations:
    workflows.argoproj.io/description: This workflow run a basic Terraform plan.
    workflows.argoproj.io/tags: terraform
    workflows.argoproj.io/version: '>= 2.9.0'
spec:
  arguments:
    parameters:
      - name: terraform-docker-image
        value: terraform
      - name: terraform-script-repository
        value: https://github.com/robwittman/argo-terraform-demo
      - name: terraform-directory
        value: terraform/app1
      - name: terraform-version
        value: 1.8.5
      - name: opa-query
        value: data.terraform.deny
      - name: opa-enforcement-level
        # Can be set to one of mandatory or advisory
        value: mandatory
      - name: terraform-init-args
        value: ""
      - name: terraform-run-args
        value: ""
  templates:
    - name: plan
      inputs:
        artifacts:
          - name: terraform
            path: /home/terraform
            git:
              repo: '{{workflow.parameters.terraform-script-repository}}'
              depth: 1
      outputs:
        artifacts:
          - name: terraform-plan
            path: /home/argo/tf.plan
            archive:
              none: {}
          - name: terraform-plan-structured
            path: /home/argo/tfplan.txt
            archive:
              none: { }
          - name: terraform-plan-json
            path: /home/argo/tfplan.json
            archive:
              none: { }
        parameters:
          - name: exit-code
            valueFrom:
              path: /home/argo/exit-code
      metadata: {}
      script:
        name: ''
        image: '{{workflow.parameters.terraform-docker-image}}'
        command:
          - sh
        resources: {}
        imagePullPolicy: Never
        source: >          
          mkdir /home/argo

          cd /home/terraform

          hc-install install --version 1.8.5 --path /usr/bin/ terraform

          terraform -chdir={{workflow.parameters.terraform-directory}} init {{workflow.parameters.terraform-init-args}} -input=false

          terraform -chdir={{workflow.parameters.terraform-directory}} plan {{workflow.parameters.terraform-run-args}} -parallelism=2 -input=false -no-color -out /home/argo/tf.plan -detailed-exitcode > /home/argo/tfplan.txt
          
          echo $? > /home/argo/exit-code
          
          cat /home/argo/exit-code
          
          terraform -chdir={{workflow.parameters.terraform-directory}} show -json /home/argo/tf.plan > /home/argo/tfplan.json

    - name: eval
      inputs:
        artifacts:
          - name: terraform-plan-json
            path: /home/argo/tfplan.json
          - name: terraform
            path: /home/terraform
            git:
              repo: '{{workflow.parameters.terraform-script-repository}}'
              depth: 1
      outputs:
        parameters:
          - name: policy-evaluation  # name of output parameter
            valueFrom:
              path: /home/terraform/eval.json
      metadata: {}
      script:
        name: ''
        image: '{{workflow.parameters.terraform-docker-image}}'
        command:
          - sh
        resources: {}
        imagePullPolicy: Never
        source: >-
          cd /home/terraform    
          
          /go/opa eval --format pretty --bundle policy/ -i /home/argo/tfplan.json data.terraform.deny > /home/terraform/eval.json

    - name: 
